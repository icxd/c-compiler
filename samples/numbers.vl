import "std/io";
io :: import "std/io";
using import "std/io"; // might add
using io :: import "std/io";

// int :: i32;          // int == i32
// int :: explicit i32; // int != i32

boolean : bool : true;
no_value : f64;
null_value : *char : null;

abc : i32 : 123;
def :: 0xFF;
ghi :: 0b101010;

dynamic_array : []i32;
static_array : [3]i32;

Vec3 :: struct {
    x : i32;
    y : i32 = 0;
    z := 0;
};

My_Enum :: enum(u8) {
    A = 0,
    B,
    C,
};

Abc :: struct { };
Def :: struct { };

My_Union :: union {
    abc : Abc;
    def : Def;
};

default_arguments_sample :: fn(a := 1, b: i32 = 123) { };

my_inline_fn :: fn() -> i32 #inline {
};

add :: fn(x: i32, y: i32) -> i32 {
};

printf :: fn(fmt: *char, args: ...) -> i32 #foreign "printf";

main :: fn() -> i32 #entry_point {
};